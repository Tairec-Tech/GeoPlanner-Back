"""add_comentario_padre_and_menciones

Revision ID: 3bd34d39b328
Revises: 37f4e9501cde
Create Date: 2025-08-25 11:22:25.694041

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '3bd34d39b328'
down_revision: Union[str, Sequence[str], None] = '37f4e9501cde'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('comentarios', sa.Column('id_comentario_padre', sa.UUID(), nullable=True))
    op.add_column('comentarios', sa.Column('menciones', sa.TEXT(), nullable=True))
    op.create_foreign_key(op.f('comentarios_id_comentario_padre_fkey'), 'comentarios', 'comentarios', ['id_comentario_padre'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Verificar si la restricción existe antes de eliminarla
    try:
        op.drop_constraint(op.f('comentarios_id_comentario_padre_fkey'), 'comentarios', type_='foreignkey')
    except:
        pass  # La restricción no existe, continuar
    op.drop_column('comentarios', 'menciones')
    op.drop_column('comentarios', 'id_comentario_padre')
    # ### end Alembic commands ###
